import-module SQLASCMDLETS
import-module SQLPS
import-module activedirectory
import-module MsOnline

#* Adds Users to the group Cosmos_Client_Access
Function AddToCosmos {Add-ADGroupMember -Identity  "Domain Users", "vpn-us-users", "zuman-us-users", "namely-us-users" "zoom-us-users", "jira-us-users","confluence-us-users" -Members $Username }

function CreateHomeFolder
{
	switch -wildcard ($city) {
		"PA" {$Path = '\\crosby\home'}
		"KC" {$Path = '\\Cosmos\home'}
    "CO" {$Path = '\\Shrapnel\home'}
}

# Set folder to c:\ (if it's set to something else like the sql provider the path creation doesn't work)
cd c:\

# Creates folder on $\HOME and set permissions
	New-Item -Path $Path -Name $UserName -ItemType Directory
    & "$WORKINGDIR\SetACL.exe" -on "$path\$UserName" -ot file -actn ace -ace "n:BEDOMAIN\$UserName;p:change"
}


Write-Host `n`n`n "*****************************************" `n

$EMPNUMBER = Read-Host "Enter Employee Number"
$UserName = Read-Host "Enter the username"
$First = Read-Host "Enter the first name"
$Last = Read-Host "Enter the last name"
$Mngr = Read-Host "Enter the username of the supervisor/manager"
Write-Host `n
Write-Host "1 = Denver"
Write-Host "2 = San Francisco"
Write-Host "3 = United Kingdom"
Write-Host "4 = CE"

DO {$Location = Read-Host "Location? Type a number above"}
Until (@(1,2,3,4) -match $Location)

#Add to Womens Group
DO {$WomensGroup = Read-Host "Female? Type Y or N"}
Until ($WomensGroup -eq "Y" -or $WomensGroup -eq "N")


#Set the Email address
$EmailName = "$($First).$Last"


switch -wildcard ($Location) {

        "1" 	{
				$Email = "$($EmailName)@fundingcircle.com"
				$Office = 1
				$locationdistro = "First Floor"
				$city = "KC"
			}
        "2" 	{
				$Email = "$($EmailName)@fundingcircle.com"
				$Office = 2
				$locationdistro = "Second Floor"
				$city = "KC"
			}
        "3" 	{
				$Email = "$($EmailName)@fundingcircle.com"
				$Office = 3
				$locationdistro = "Third Floor"
				$city = "KC"
			}

        "4" 	{
				$OU = 'OU=Crossroads,OU=Users,OU=BEAP,DC=BEDOMAIN,DC=BEAP,DC=com'
				$Email = "$($EmailName)@crossroads.us"
				$Office = 3
				$locationdistro = "Crossroads"
				$city = "KC"
			}
        "5" 	{
				$OU = 'OU=Users,OU=Grenadier,DC=BEDOMAIN,DC=BEAP,DC=com'
				$Email = "$($EmailName)@grenadierco.com"
				$Office = 6
				$locationdistro = "Grenadier"
				$city - "CO"
			}

			  "6" 	{
			  $OU = 'OU=Users,OU=BarkleyREI,DC=BEDOMAIN,DC=BEAP,DC=com'
			  $Email = "$($EmailName)@barkleyrei.com"
			  $locationdistro = "Pittsburgh Partners"
			  $city = "PA"
		  }

	}

#Sets user Department by list option
$Departments = @(
"Administration"
"Barkley Design"
"Barkley Films"
"Brand Leadership"
"CollectiveStudio(Payless)"
"Content"
"Creative"
"Crossroads"
"Engagement"
"Executive"
"Finance"
"Fuel"
"Growth/FutureCast"
"InnovationLab"
"IT"
"Media"
"Production"
"ProjectManagement"
"Social Media"
"Strategy"
"Intern"
)

$Num = 0
$DepartmentList = $Departments | % {
		$num++
		$objdept = $_
		(1) | Select Number,Name | % {
			$_.Number = $num
			$_.Name = $objdept
			$_
		}
	}

$DepartmentList | ft -AutoSize

DO {$Department = Read-Host "Department? Type a number above (Select 0 for other)"}
Until ((0..$DepartmentList.count) -match $Department)

switch -wildcard ($Department) {
"0" 	{
			$Departmentdistro = "SKIP"
			$OU = "OU=Users,OU=SF,OU=FCUSA,DC=fcusa,DC=local"
			}

"1" 	{
			$Departmentdistro = "Administration"
			$MSgroup = "MS_Administration"
			$OU = "OU=Users,OU=SF,OU=FCUSA,DC=fcusa,DC=local"
			}

"2"   {
		  $Departmentdistro = "Design-All"
			$MSgroup = "MS_design"
			$OU  = "OU=Users,OU=SF,OU=FCUSA,DC=fcusa,DC=local"
			}


	}



Write-Host `n
Write-Host "Username:`t $UserName"
Write-Host "First Name:`t $First"
Write-Host "Last Name:`t $Last"
Write-Host "Email Address:`t $Email"
Write-Host "Add to:`t $locationdistro"
Write-Host "Add To Womens Group? $WomensGroup"
Write-Host "Department - $Departmentdistro"
Write-Host `n
$q = Read-Host "Do you want to proceed? Y or N"

if ($q -eq 'Y') {
#builds user account
	New-ADUser -Enabled $True -SamAccountName $UserName -UserPrincipalName "$($UserName)@fundingcircle.com" -EmailAddress $Email -Name "$First $Last" -DisplayName "$First $Last" -GivenName $First -Surname $Last -Path $OU -AccountPassword (Read-Host -AsSecureString "AccountPassword") -Manager $Mngr -PassThru
	Write-Host "Waiting 15 Seconds then adding home folder"
	Start-Sleep -Seconds 15
	CreateHomeFolder
Add-ADGroupMember -Identity $locationdistro -Members $UserName


if ($Departmentdistro -ne "SKIP") {
		Add-ADGroupMember -Identity $Departmentdistro -Members $UserName
		Add-ADGroupMember -Identity $MSgroup -Members $UserName
	}


#edit after change of office location
if ($WomensGroup -eq "y") {Add-ADGroupMember -Identity "Barkley Women's Group" -Members $UserName}
	if (@(1,2,3) -match $office) {
		Set-ADUser -Identity $UserName -Office $office
	}


# Mirror Group membership to another user
$q2 = Read-Host "Do you want to copy another user's permissions? Y or N"
if ($q2 -eq 'Y') {
$MirrorUser = Read-Host "Enter the username of the host that you wish to copy permissions from"
Get-ADUser -Identity $MirrorUser -Properties memberof |
Select-Object -ExpandProperty memberof |
Add-ADGroupMember -Members $Username -PassThru |
Select-Object -Property SamAccountName
}

# Creates a folder for concur files on "\\Cosmos\Department\Finance\PermanentFiles\CheckBackup\ConcurExpenseReportsReceipts"
$Foldername = "$CONCURFILES\$EMPNUMBER-$Last$First"
New-Item -ItemType Directory "$Foldername"

# Setup user in Advantage
$DOMAIN = "BEDOMAIN"

# Change the username to all lowercase for Advantage Setup
$UserName = ($UserName).ToLower()

$CreateLogin = @"
create login "$DOMAIN\$UserName" from windows;
"@

$CreateUser = @"
use BARKLEY;
create user "$DOMAIN\$UserName" from login "$DOMAIN\$UserName";
"@

$CreateTRAINUser = @"
use TRAINING;
create user "$DOMAIN\$UserName" from login "$DOMAIN\$UserName";
"@

Invoke-Sqlcmd -Query $CreateLogin -ServerInstance "T-W12P-ADVAN03"
Invoke-Sqlcmd -Query $CreateUser -ServerInstance "T-W12P-ADVAN03"
Invoke-Sqlcmd -Query $CreateTRAINUser -ServerInstance "T-W12P-ADVAN03"


# Creates SQL database permissions for BARKLEY and TRAINING databases
$datareader = @"
sp_addrolemember 'db_datareader', '$DOMAIN\$UserName'
"@

$datawriter = @"
sp_addrolemember 'db_datawriter', '$DOMAIN\$UserName'
"@

Invoke-Sqlcmd -Query $datareader -ServerInstance "T-W12P-ADVAN03" -DATABASE BARKLEY
Invoke-Sqlcmd -Query $datawriter -ServerInstance "T-W12P-ADVAN03" -DATABASE BARKLEY

Invoke-Sqlcmd -Query $datareader -ServerInstance "T-W12P-ADVAN03" -DATABASE TRAINING
Invoke-Sqlcmd -Query $datawriter -ServerInstance "T-W12P-ADVAN03" -DATABASE TRAINING



#add o365 license to new user
$secpasswd = ConvertTo-SecureString "*********" -AsPlainText -Force
$mycreds = New-Object System.Management.Automation.PSCredential ("engineers@fundingcircle.com", $secpasswd)
Connect-MsolService -Credential $mycreds
Start-ADSyncSyncCycle -PolicyType Delta
Start-Sleep 10
Set-MsolUser -UserPrincipalName $Username@fundingcircle.com -UsageLocation "US"
Set-MsolUserLicense -UserPrincipalName $UserName@fundingcircle.com -AddLicenses Barkley628:OFFICESUBSCRIPTION

#Call Function to add user to cosmos_client_Access
AddToCosmos

#write if statement to add @fundingcircle alias to non @bark users
Set-ADUser $Username -add @{othermailbox="$Username@fundingcircle.com"}
}
